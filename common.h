#include <TFile.h>
#include <TTree.h>
#include <TH1D.h>
#include <TCanvas.h>
#include <TMath.h>
#include <TAxis.h>
#include <TLegend.h>
#include <TString.h>
#include <RooRealVar.h>
#include <RooCategory.h>
#include <RooDataSet.h>
#include <RooBernstein.h>
#include <RooGaussian.h>
#include <RooLognormal.h>
#include <RooCBShape.h>
#include <RooAddPdf.h>
#include <RooProdPdf.h>
#include <RooAddition.h>
#include <RooFormulaVar.h>
#include <RooProduct.h>
#include <RooArgList.h>
#include <RooExponential.h>
#include <RooGenericPdf.h>
#include <RooKeysPdf.h>
#include <RooHistPdf.h>
#include <RooSimultaneous.h>
#include <RooPlot.h>
#include <RooFitResult.h>
#include <RooWorkspace.h>

using namespace RooFit;
using namespace std;

enum { Category,
    Eff_bsmm, dEff_bsmm, Eff_bdmm, dEff_bdmm, Eff_bupsik, dEff_bupsik, Eff_bspsiphi, dEff_bspsiphi,
    N_bupsik, dN_bupsik, N_bspsiphi, dN_bspsiphi, N_bsmm, dN_bsmm, N_bdmm, dN_bdmm,
    N_bskkBg, dN_bskkBg, N_bskpiBg, dN_bskpiBg, N_bspipiBg, dN_bspipiBg, N_bdkkBg, dN_bdkkBg,
    N_bdkpiBg, dN_bdkpiBg, N_bdpipiBg, dN_bdpipiBg, N_lbppiBg, dN_lbppiBg, N_lbpkBg, dN_lbpkBg,
    N_bskmunuBg, dN_bskmunuBg, N_bdpimunuBg, dN_bdpimunuBg, N_lbpmunuBg, dN_lbpmunuBg, N_bdpimumuBg, dN_bdpimumuBg,
    N_bupimumuBg, dN_bupimumuBg, N_Columns };

const int N_Categories = 8;

const double effyield[N_Categories][N_Columns] = {
    {0,
        0.004543, 0.000517, 0.004483, 0.000511, 0.001155, 0.000131, 0.000667, 7.6e-05,
        120513, 4854.9, 8206, 299, 7.01598, 1.03285, 0.819156, 0.127718,
        0.047001, 0.048373, 0.006425, 0.00663314, 0.000475, 0.000492012, 0.000562, 0.000586022,
        0.087962, 0.0902768, 0.013695, 0.0140614, 6.4e-05, 7.8e-05, 0.000131, 0.000157003,
        1.36259, 0.430796, 3.91589, 0.678447, 0.499029, 0.329879, 3.7878, 0.639549,
        1.14124, 0.21571},
    {1,
        0.001964, 0.000176, 0.001969, 0.000178, 0.000267, 2.3e-05, 0.000141, 1.3e-05,
        30234.7, 1241.2, 1925.9, 175.9, 3.29122, 0.423685, 0.391344, 0.0542395,
        0.018439, 0.0189329, 0.002833, 0.00291815, 0.00024, 0.000246014, 0.000219, 0.000229013,
        0.037623, 0.0385218, 0.006921, 0.00708751, 4.5e-05, 5.4e-05, 8e-05, 9.50053e-05,
        0.521605, 0.169884, 1.70352, 0.294366, 0.328414, 0.216085, 1.66993, 0.26355,
        0.466465, 0.0840358},
    {2,
        0.004423, 0.000502, 0.004332, 0.0005, 0.001287, 0.000146, 0.00076, 8.6e-05,
        426502, 17105.3, 26900.3, 865, 21.6758, 3.19097, 2.5145, 0.392046,
        0.185808, 0.191233, 0.021126, 0.0218134, 0.0013, 0.00134402, 0.002208, 0.00230501,
        0.283512, 0.290969, 0.03743, 0.0384281, 0.000216, 0.000258004, 0.000526, 0.000625018,
        4.81925, 1.47133, 12.0297, 1.98651, 1.73987, 1.14923, 12.1477, 2.02294,
        3.84527, 0.717567},
    {3,
        0.002499, 0.000285, 0.00249, 0.000289, 0.000392, 4.4e-05, 0.00022, 2.5e-05,
        107521, 4366.3, 6667.1, 567.3, 10.1352, 1.49204, 1.19832, 0.186836,
        0.073772, 0.0759269, 0.009079, 0.00937337, 0.000625, 0.000647026, 0.000872, 0.000910005,
        0.127024, 0.130369, 0.017877, 0.0183531, 9.5e-05, 0.000112009, 0.0002, 0.000239015,
        1.96845, 0.606082, 5.18694, 0.882191, 0.708035, 0.467745, 5.29532, 0.892179,
        1.62179, 0.305813},
    {4,
        0.00218, 0.00018, 0.00224, 0.000171, 0.000827, 6.5e-05, 0.000495, 3.7e-05,
        230925, 9486.7, 15109.4, 744.4, 8.98744, 1.06991, 1.09547, 0.142027,
        0.045777, 0.0469456, 0.005613, 0.00577518, 0.000456, 0.000470013, 0.000538, 0.000558012,
        0.083318, 0.0852038, 0.013224, 0.0135284, 0.00014, 0.000166006, 0.000263, 0.000312058,
        1.41078, 0.425116, 10.8028, 1.50469, 0.181182, 0.118816, 4.80816, 0.694382,
        1.38438, 0.232237},
    {5,
        0.003433, 0.000284, 0.003505, 0.000267, 0.000995, 7.9e-05, 0.000587, 4.4e-05,
        322943, 13011.9, 21071, 1735.2, 16.4671, 1.96033, 1.99363, 0.258474,
        0.067995, 0.0697307, 0.008772, 0.0090262, 0.000787, 0.000810019, 0.000795, 0.000826016,
        0.132015, 0.135004, 0.022544, 0.0230635, 0.00028, 0.000334003, 0.000506, 0.000600068,
        2.12617, 0.634075, 19.8565, 2.74293, 0.392914, 0.257525, 8.48608, 1.21284,
        2.64586, 0.439323},
    {6,
        0.002214, 0.000183, 0.002288, 0.000175, 0.000842, 6.7e-05, 0.000516, 3.9e-05,
        273994, 11138.1, 18473.8, 845.7, 10.628, 1.26521, 1.30513, 0.169209,
        0.054737, 0.0561358, 0.006656, 0.0068482, 0.000543, 0.000559017, 0.000645, 0.000671019,
        0.097418, 0.0996231, 0.015377, 0.0157305, 0.000167, 0.000197005, 0.000324, 0.00038607,
        1.61275, 0.486112, 13.6477, 1.89782, 0.200737, 0.131647, 5.79956, 0.837181,
        1.75304, 0.29357},
    {7,
        0.003386, 0.00028, 0.003457, 0.000263, 0.000988, 7.8e-05, 0.000585, 4.4e-05,
        322946, 13233.5, 23615.5, 1980.3, 16.3541, 1.94687, 1.97873, 0.256541,
        0.06729, 0.0690097, 0.008832, 0.00908519, 0.000776, 0.000799021, 0.000782, 0.000813017,
        0.129316, 0.132242, 0.022253, 0.0227635, 0.000285, 0.000339007, 0.000493, 0.00058707,
        2.46685, 0.732905, 18.9095, 2.61533, 0.341105, 0.223607, 8.18593, 1.17164,
        2.60077, 0.432246}
};
